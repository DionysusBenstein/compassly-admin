import { useEffect, useState } from "react";
import { Pagination } from "../../components";
import styles from "../../styles/containers/Table.module.scss";

const EditBtn = ({ click }: { click: () => void }) => {
  return (
    <button className={styles.btn} onClick={click}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M18.4592 12.2413C18.1841 12.2413 17.9611 12.4643 17.9611 12.7394V17.162C17.9601 17.987 17.2918 18.6555 16.4668 18.6563H2.49052C1.66553 18.6555 0.99718 17.987 0.996207 17.162V4.18192C0.99718 3.35714 1.66553 2.68859 2.49052 2.68761H6.91313C7.18826 2.68761 7.41124 2.46463 7.41124 2.18951C7.41124 1.91458 7.18826 1.69141 6.91313 1.69141H2.49052C1.11567 1.69296 0.00155657 2.80708 0 4.18192V17.1622C0.00155657 18.537 1.11567 19.6512 2.49052 19.6527H16.4668C17.8416 19.6512 18.9558 18.537 18.9573 17.1622V12.7394C18.9573 12.4643 18.7343 12.2413 18.4592 12.2413Z"
          fill="#0A0E17"
        />
        <path
          d="M18.7597 0.734659C17.8843 -0.14072 16.4651 -0.14072 15.5898 0.734659L6.70328 9.62114C6.64238 9.68204 6.59841 9.75753 6.57545 9.84042L5.40685 14.0593C5.35879 14.2323 5.40763 14.4175 5.53449 14.5446C5.66154 14.6714 5.84678 14.7203 6.01975 14.6724L10.2386 13.5036C10.3215 13.4807 10.397 13.4367 10.4579 13.3758L19.3442 4.48911C20.2182 3.61315 20.2182 2.19511 19.3442 1.31915L18.7597 0.734659ZM7.7886 9.94491L15.0615 2.67181L17.4071 5.01738L10.134 12.2905L7.7886 9.94491ZM7.32007 10.8851L9.19399 12.7592L6.60191 13.4774L7.32007 10.8851ZM18.6399 3.78477L18.1116 4.31303L15.7659 1.96727L16.2943 1.43901C16.7805 0.952774 17.5689 0.952774 18.0552 1.43901L18.6399 2.0235C19.1253 2.51032 19.1253 3.29814 18.6399 3.78477Z"
          fill="#0A0E17"
        />
      </svg>
    </button>
  );
};

const DeleteBtn = ({ click }: { click: () => void }) => {
  return (
    <button className={styles.btn} onClick={click}>
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g clipPath="url(#clip0_2467_558)">
          <path
            d="M12.7584 7.24609C12.4997 7.24609 12.29 7.45577 12.29 7.71448V16.5669C12.29 16.8255 12.4997 17.0353 12.7584 17.0353C13.0171 17.0353 13.2268 16.8255 13.2268 16.5669V7.71448C13.2268 7.45577 13.0171 7.24609 12.7584 7.24609Z"
            fill="#C03221"
          />
          <path
            d="M7.23206 7.24609C6.97335 7.24609 6.76367 7.45577 6.76367 7.71448V16.5669C6.76367 16.8255 6.97335 17.0353 7.23206 17.0353C7.49077 17.0353 7.70044 16.8255 7.70044 16.5669V7.71448C7.70044 7.45577 7.49077 7.24609 7.23206 7.24609Z"
            fill="#C03221"
          />
          <path
            d="M3.20333 5.95419V17.4942C3.20333 18.1762 3.45344 18.8168 3.89035 19.2764C4.32525 19.7373 4.93049 19.9989 5.56391 20H14.4258C15.0594 19.9989 15.6647 19.7373 16.0994 19.2764C16.5363 18.8168 16.7864 18.1762 16.7864 17.4942V5.95419C17.6549 5.72366 18.2177 4.8846 18.1016 3.99339C17.9852 3.10236 17.2261 2.43583 16.3274 2.43565H13.9293V1.85017C13.932 1.35782 13.7374 0.885049 13.3888 0.537238C13.0403 0.18961 12.5668 -0.00396362 12.0744 6.15416e-05H7.91533C7.42298 -0.00396362 6.94948 0.18961 6.60093 0.537238C6.25239 0.885049 6.05772 1.35782 6.06046 1.85017V2.43565H3.66238C2.76367 2.43583 2.00456 3.10236 1.8882 3.99339C1.77202 4.8846 2.33481 5.72366 3.20333 5.95419ZM14.4258 19.0632H5.56391C4.76308 19.0632 4.14009 18.3753 4.14009 17.4942V5.99536H15.8497V17.4942C15.8497 18.3753 15.2267 19.0632 14.4258 19.0632ZM6.99723 1.85017C6.99412 1.60628 7.08999 1.37154 7.26307 1.19938C7.43597 1.02721 7.67126 0.932619 7.91533 0.936827H12.0744C12.3185 0.932619 12.5538 1.02721 12.7267 1.19938C12.8998 1.37136 12.9956 1.60628 12.9925 1.85017V2.43565H6.99723V1.85017ZM3.66238 3.37242H16.3274C16.793 3.37242 17.1705 3.74987 17.1705 4.21551C17.1705 4.68114 16.793 5.05859 16.3274 5.05859H3.66238C3.19674 5.05859 2.81929 4.68114 2.81929 4.21551C2.81929 3.74987 3.19674 3.37242 3.66238 3.37242Z"
            fill="#C03221"
          />
          <path
            d="M9.99475 7.24609C9.73604 7.24609 9.52637 7.45577 9.52637 7.71448V16.5669C9.52637 16.8255 9.73604 17.0353 9.99475 17.0353C10.2535 17.0353 10.4631 16.8255 10.4631 16.5669V7.71448C10.4631 7.45577 10.2535 7.24609 9.99475 7.24609Z"
            fill="#C03221"
          />
        </g>
        <defs>
          <clipPath id="clip0_2467_558">
            <rect width="20" height="20" fill="white" />
          </clipPath>
        </defs>
      </svg>
    </button>
  );
};

export const Table = ({
  counts,
  header,
  data,
  page,
  headerData,
  searchAction,
  updateAction,
}: {
  counts: number;
  header: "classic" | "search";
  data: any;
  page: number;
  headerData?: any[];
  searchAction?: (e: any) => void;
  updateAction?: () => void;
}) => {
  const [load, setLoad] = useState<boolean>(false);

  useEffect(() => setLoad(true), []);
  return (
    <div className={styles.table}>
      {header === "classic" && (
        <div className={styles.tableHead}>
          {headerData?.map((el: any, key: number) => (
            <div className={`${styles.col} ${styles[el.type]}`} key={key}>
              {el.value}
            </div>
          ))}
        </div>
      )}
      {header === "search" && (
        <div className={styles.tableHead}>
          <input
            type="text"
            className={styles.tableSearch}
            placeholder="Search"
            onKeyUp={searchAction}
          />
        </div>
      )}

      <div className={styles.tablecontent}>
        {data?.map((el: any, key: number) => (
          <div className={styles.row} key={key}>
            {el?.map((val: any, key_2: number) => (
              <div className={`${styles.col} ${styles[val.type]}`} key={key_2}>
                {val.value}
              </div>
            ))}
            <div className={`${styles.col} ${styles.actions}`}>
              <EditBtn click={() => console.log(1)} />
              <DeleteBtn click={() => console.log(1)} />
            </div>
          </div>
        ))}
      </div>
      {load && (
        <div className={styles.tableFooter}>
          <Pagination counts={counts} diven={20} onUpdate={updateAction} />
        </div>
      )}
    </div>
  );
};
